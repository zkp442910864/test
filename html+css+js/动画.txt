http://matthewlein.com/ceaser/		贝塞尔曲线


代码写动画
	$('body').animate({scrollTop:0},300);

	

transition过渡
	transition-property  要运动的属性  (宽、高、背景之类的)
	transition-duration 运动时间	   (过渡的时间)
	transition-delay 延迟时间
	transition-timing-function 运动形式 
		ease：（逐渐变慢）默认值
		linear：（匀速）
		ease-in：(加速)
		ease-out：（减速）
		ease-in-out：（先加速后减速）
		cubic-bezier 贝塞尔曲线（ x1, y1, x2, y2 ） 
	
过渡完成事件 	兼容
	Webkit： obj.addEventListener('webkitTransitionEnd',function(){},false); 
	firefox: obj.addEventListener('transitionend',function(){},false);
		每个动画完成都会调用(宽高为2个动画)
	
2D变换基点
	transform-origin
	默认中心点位置
	left  right bottom  top 也可指定具体的像素
	设置transform-origin: 0 0; 为该div的左上角

2D变换	
	transform
	一、
		rotate()  旋转函数 取值度数					rotate(360deg)	rotateX(360deg)	rotateY(360deg)	
			deg  度数		
			Transform-origin 旋转的基点
		skew() 倾斜函数 取值度数 					skew(45deg,10deg)
			skewX()									skewX(45deg)
			skewY()									skewY(10deg)
		scale() 缩放函数 取值 正数、负数和小数		scale(2)		1为正常大小
			scaleX()								scaleX(2)
			scaleY()								scaleY(2)
		translate() 位移函数						translate(100px ,100px)
			translateX()							translateX(100px)
			translateY()							translateY(100px)
			
	二、
		matrix(a,b,c,d,e,f) 矩阵函数    这函数包含了上面4种的功能
			通过矩阵实现缩放--- a d决定
				x轴缩放 a=x*a    c=x*c     e=x*e;
				y轴缩放 b=y*b   d=y*d     f=y*f;
			通过矩阵实现位移—e f 决定
				x轴位移: e=e+x
				y轴位移: f=f+y
			通过矩阵实现倾斜—b c决定	matrix(1,tan(θy),tan(θx),1,0,0)
				x轴倾斜: c=Math.tan(xDeg/180*Math.PI)
				y轴倾斜: b=Math.tan(yDeg/180*Math.PI)
			通过矩阵实现旋转--matrix(cosθ,sinθ,-sinθ,cosθ,0,0)
				a=Math.cos(deg/180*Math.PI); 
				b=Math.sin(deg/180*Math.PI);
				c=-Math.sin(deg/180*Math.PI);
				d=Math.cos(deg/180*Math.PI);

变换兼容IE9以下IE版本只能通过矩阵来实现
	filter: progid:DXImageTransform.Microsoft.Matrix( M11= 1, M12= 0, M21= 0 , M22=1,SizingMethod='auto expand');
	IE下的矩阵没有E和F两个参数 M11==a; M12==c; M21==b; M22==d

3d变换
	样式里的属性
	transform-style（preserve-3d） 建立3D空间		*写在包裹2d变换的div上
	Perspective 景深					*不懂
	Perspective- origin 景深基点		*不懂
	*要创建了3d空间才能看到3d效果

动画
	例：在keyframes写要执行的动画
		#d1{
			-webkit-animation: 2s move;
		}
			
		@-webkit-keyframes name{
			from{}
			to{}		
		or		
			0%{}
			74%{}
			100%{}
		}
	
	animation-name			动画名称（关键帧名称）
	animation-duration		动画持续时间
	animation-delay			动画延迟
		只是第一次
	animation-iteration-count		重复次数
		infinite 为无限次
	animation-direction		 规定动画是否在下一周期逆向地播放
		alternate	动画来回播放
		normal		动画第二次直接跳到0%的状态开始执行
	animation-play-state 播放状态（ running 播放 和paused 暂停 ）
	animation-timing-function	动画运动形式
		linear		匀速。
		ease		缓冲。
		ease-in		由慢到快。
		ease-out	由快到慢。
		ease-in-out	由慢到快再到慢。
		cubic-bezier(number, number, number, number)：特定的贝塞尔曲线类型，4个数值需在[0, 1]区间内
	 
	可以通过添加class名来执行事先设置好的动画

动画完成事件	
	obj.addEventListener('webkitAnimationEnd', function (){}, false);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	