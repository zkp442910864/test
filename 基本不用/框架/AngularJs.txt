



cdn
	<script src="http://apps.bdimg.com/libs/angular.js/1.4.6/angular.min.js"></script>


$scope作用域
	Scope(作用域) 是应用在 HTML (视图) 和 JavaScript (控制器)之间的纽带.
	Scope 是一个对象,有可用的方法和属性.
	Scope 可应用在视图和控制器上.
	$scope是隐藏的,作为数据传输的纽带

模块
	模块定义了一个应用程序.
	模块是应用程序中不同部分的容器.
	模块是应用控制器的容器.
	控制器通常属于一个模块.
	
	//创建模块
	var app = angular.module('MyApp', []);
	//添加控制器
	app.controller("MyController", function($scope) {
		//这里的变量,函数,数组,对象,都是通过 $scope.自定义名 来创建
		//如: $scope.name = 'aa';		$scope.name = function(){};		$scope.name = [];	$scope.name = {};	
	});
	
过滤器
	lowercase		字符串转为小写							<h1>{{ name | lowercase }}</h1>
	uppercase		字符串转为大写							<h1>{{ name | uppercase }}</h1>
	currency		数字转为货币格式						<h1>{{ money | currency }}</h1>
	filter(包含)	从数组项中根据条件选择子集				<h1>{{ array1 |  filter:{city: '深圳'} }}</h1>
					如果数组中多个符合,就都选择				<h1>{{ array2 |  filter:'a' }}</h1>
					
	orderBy			根据某个表达式排列数组	
		参数一：必须写！ + 或  - 强制进行升序或者是降序.
		参数二：true 可以将排序结果进行反转.
	如:	数组:<h3>{{ shuzu | orderBy:'-'}}</h3>
		对象:<h3>{{ duixiang | orderBy:'+name':true}}</h3>		数组对象排序必须要指定对象中某个变量,这样才能根据该变量来进行排序
	
	date			时间的格式									
		参数:medium,short,fullDate,longDate,mediumDate,shortDate,mediumTime,shortTime
	如:	<h2>{{ today |  date:'medium' }}</h2>
		自定义格式<h3 ng-bind=" shijian | date:'hh:mm:ss yyyy-MM-dd' "  ></h3>

	limitTo			截取变量
		<h2>{{ text | limitTo:3 }}</h2>			从头开始
		<h2>{{ text | limitTo:-3 }}</h2>		从尾开始
	
	number			数字格式化
		<h1>{{ num | number }}</h1>
		<h1>{{ num | number:5 }}</h1>			后面的参数是规定小数位有多长
	
	required		验证表单里的文本框是否为空
		<form>
			<input type="text"  required/>
			<input type="submit" value=""/>
		</form>


双向绑定
	就是一个数据被多个标签设置或获取
	
依赖注入
	通过模块的factory函数来创建被依赖对象
	参数 1：名称
	参数 2: 配置内容
	app.factory('greeter', function() {
			return {
				greet: function(msg) {
				alert("hello:" + msg);
			}
		}
	});	

	注入是在模块创建控制器的时候注入
	参数 1：名称
	参数 2: 在这进行注入，要保持原有的
	app.controller('MyController', function($scope,greeter) {
		$scope.sayHello = function() {
			greeter.greet('明明');
		};
	});

路由
	把整个网站写在一个页面里,然后通过路由来分配各个部分的路径,来链接到某个部分
	例:
	<body>	
		<script type="text/ng-template" id="embedded.home.html">
			<h1> Home </h1>
			<h2 class="xxx"> 小明 </h2>
		</script>

		<script type="text/ng-template" id="embedded.about.html">
			<h1> About </h1>
		</script>

		<div>
			<div>
				<a href="#/home">Home</a>
				<a href="#/about">About</a>
			</div>

			<!-- 显示加载的页面内容 -->
			<div ng-view="">
			</div>
		</div>
	</body>	
	<script type="text/javascript">
		var app = angular.module('MyApp', ['ngRoute']);
		app.controller('HomeController', function($scope) {
			$scope.$route = $route;
		})
		app.controller('AboutController', function($scope) {
			$scope.$route = $route;
		})
		app.config(function($routeProvider) {
			$routeProvider.
			when('/home', {
				//templateUrl: 'embedded.home.html',
				template:'<p>test</p>',
				
				controller: 'HomeController'
			}).
			when('/about', {
				templateUrl: 'embedded.about.html',
				controller: 'AboutController'
			}).
			otherwise({
				redirectTo: '/home'
			});
		});	
	</script>

http
	$http 是 AngularJS 中的一个核心服务，用于读取远程服务器的数据。
	*涉及到跨域问题

	例1:
	<script >
		var app = angular.module('MyApp', []);
		app.controller('MyController', ['$scope', '$http', function($scope, $http) {
			$http({
				method: 'GET',
				url:'data.json'
			}).success(function(data,status,headers,config){
				console.log(data);
				$scope.info = data;
			}).error(function(data,status,headers,config){
				console.log('error！');
			});
		}]);
	</script>
	
	例2:
	<script>
		var app = angular.module('myApp', []);
		app.controller('customersCtrl', function($scope, $http) {
  		 	 $http.get("http://www.runoob.com/try/angularjs/data/Customers_JSON.php")
    		.success(function(response) {$scope.names = response.records;});
		});
	</script>

	例3:通过jsonp跨域请求,要配合服务端
		callback:是给服务端调用的,带的参数一定要是JSON_CALLBACK
		JSON_CALLBACK:这是一个方法名,服务端通过调用这方法传回请求内容
		
	$http.jsonp('http://172.22.165.1:8080/myS/MyS?callback=JSON_CALLBACK').success(function(data){
		$scope.name2 = data;
	})	
		
指令
	ng-app和ng-controller的作用范围主要根据你的标签作用范围来定
	
	ng-app				定义应用程序的范围,整个html文档里只能有一个
		一般写在<html>里,写这里的作用范围最大,如果有自定义的模块,就赋值给它    			如:ng-app="myApp";
	ng-controller		定义应用的控制器对象,这也有作用范围,但可以写多个,					
		如:<div id='d1' ng-controller='MyController'></div>		<div id='d2' ng-controller='MyController'></div>	
		
	no-model			将文本域之类的输入框的 value 绑定到 $scope 变量中						如:<input type="text" ng-model='msg' />	
						如果 $scope 中不存在该变量, 将会创建它.
	ng-bind				将 $scope 中 msg 变量(数据)绑定到当前元素			两种写法			如:<p ng-bind='msg'></p>		<p>{{ msg }}</p>
	ng-init				初始化值
						指令执行给定的表达式.					如:<div ng-init="array=[1,2,3,45,56,7]"></div>  变量,数组,对象都可以
	ng-repeat			平铺当前的标签,同时循环输出数组的内容						如:<p ng-repeat="a in duixiang">{{a}}</p>						
	ng-click			元素被点击时的行为						如:<button ng-click="fun(msg1,msg2)">a</button>
	ng-disabled			表单里控件的属性值true可用,false不可用,textarea和select也起作用
		这我们可以通过控制器的$scope来控制值,让控件可用或不可用
	ng-readonly			设置文本框或域为只读	
	ng-selected			值为ture,在下拉选项列表中,某项设置了这属性,就显示该项
	ng-href				从$scope中取值,格式要注意		<a ng-href="{{ myurl }}">lichao</a><br />
	ng-src 				同上		<img ng-src="{{ myaddr }}"/>
	ng-show				值为ture或false  显示或隐藏
	ng-hide				值为ture或false  隐藏或显示


	自定义属性:通过模块的directive 函数来创建
	参数 1：指令名称
	参数 2: 指令的配置内容
	app.directive('hello',function(){
		return{
			/*
			*restrict:  匹配指令.
			* E  C  M  A
			* E: 元素 		<hello></hello>
			* A: 属性		
			* C: 类			
			* M: 注释		<!-- directive:hello -->
			* template：指令要的内容.如果该内容绑定数据的话,创建多个该指令后,都是用同一个$scope,
						会导致数据都一样,加上scope:{}这个$scope独自的.
			* replace:true  替换原标签.
			* transclude:true	占位用.放到指定的位置,并不会替换原标签里的内容.和replace不能同时用
			*/
			//scope:{},
			restrict:'E',
			template:'<a href="http://www.lichao8090.com">lichao8090.com</a>',
			replace:true,

			//template:'<span ng-transclude></span><a href="http://www.lichao8090.cn">lichao8090</a>',
			//transclude:true,
		}
	});













































